[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Code Peer Review with GitHub",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "01-introduction.html",
    "href": "01-introduction.html",
    "title": "1  What is Code Peer Review? Why on Github?",
    "section": "",
    "text": "1.1 What is GitHub?\nThis guide provides instructions for implementing a code peer review system using GitHub for undergraduate computing modules. With the new automation scripts, most of the setup process is now automated, making implementation much faster and more reliable. The system integrates with Moodle for familiar student submission and leverages GitHub’s collaborative features for peer review.\nCode peer review is when you look at another student’s code and give them helpful feedback, just like when you review each other’s essays. At the same time, other students will review your code and give you feedback. This helps everyone learn from each other and improve their coding skills. Learning to review code and use GitHub will help you in your career because:\nGitHub is a website that programmers use to share and work on code together. Think of it like Google Docs, but specifically designed for computer code. Don’t worry if you’ve never used it before - this guide will walk you through everything step by step!",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>What is Code Peer Review? Why on Github?</span>"
    ]
  },
  {
    "objectID": "02-setup-for-teachers.html",
    "href": "02-setup-for-teachers.html",
    "title": "2  Prerequisites",
    "section": "",
    "text": "GitHub account with ability to create organizations\nAccess to module Moodle page\nR and RStudio installed\nStudent list with GitHub usernames\nAssessment materials and marking criteria prepared",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Prerequisites</span>"
    ]
  },
  {
    "objectID": "03-overview-for-teachers.html",
    "href": "03-overview-for-teachers.html",
    "title": "3  Quick Start with Automation Scripts",
    "section": "",
    "text": "3.0.1 1. Initial Setup (One-Time)\nDownload and organize the automation scripts:\nproject_folder/\n├── setup_config.R\n├── main_automation_script.R\n├── github_functions.R\n├── file_management.R\n├── monitor_progress.R\n└── README.md\nRun the setup script:\n# In RStudio/R console\nsource(\"setup_config.R\")\nrun_setup()\nThis automated setup will: - Install required R packages - Guide you through GitHub token creation - Create necessary folder structure - Generate sample configuration files - Validate your setup\n\n\n3.0.2 2. Prepare Your Data\nCreate your student list (student_list.csv):\nstudent_id,github_username,ucl_email,name\n12345,alice_github,alice.smith@ucl.ac.uk,Alice Smith\n12346,bob_jones,bob.jones@ucl.ac.uk,Bob Jones\n12347,carol_white,carol.white@ucl.ac.uk,Carol White\nOrganize student submissions: Download submissions from Moodle and organize them in folders:\nsubmissions/\n├── 12345/\n│   ├── analysis.R\n│   └── data_cleaning.R\n├── 12346/\n│   ├── analysis.R\n│   └── visualization.R\n\n\n3.0.3 3. Run the Automation\nConfigure the main script: Edit these variables in main_automation_script.R:\nORG_NAME &lt;- \"UCL-StatSci-STAT0001-2025\"      # Your GitHub organization\nASSIGNMENT_NAME &lt;- \"assignment-1\"            # Current assignment\nLOCAL_SUBMISSIONS_PATH &lt;- \"submissions/\"     # Path to submissions\nExecute the automation:\nsource(\"main_automation_script.R\")\nWhat happens automatically: - ✅ Creates private repositories for each student - ✅ Sets up reviewer branches and issue templates - ✅ Uploads all student files - ✅ Randomly assigns peer reviewers (2 per student) - ✅ Sets repository permissions - ✅ Generates email templates and distribution URLs\n\n\n3.0.4 4. Distribute Access Information\nThe script generates several files: - student_repo_links.csv - Repository URLs for each student - email_templates/ - Personalized emails for each student - reviewer_assignments.csv - Complete assignment matrix\nSend emails to students: Use the generated email templates or import the CSV data into your email system for mail merge.\n\n\n3.0.5 5. Monitor Progress\nTrack completion in real-time:\nsource(\"monitor_progress.R\")\nreport &lt;- run_progress_check()\nWhat you get: - Completion rates across all students - Visual progress charts - Detailed analytics - Automated reminder emails for incomplete reviews\nThe section below is a very detailed explanation of the workflow. If you have any trouble executing the above procedure, please refer to the section below, and the README.md document under the setup folder.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Quick Start with Automation Scripts</span>"
    ]
  },
  {
    "objectID": "04-details-for-teachers.html",
    "href": "04-details-for-teachers.html",
    "title": "4  Detailed Process Walkthrough",
    "section": "",
    "text": "4.0.1 GitHub Organization Setup\nCreate your organization (one-time): 1. Go to https://github.com/settings/organizations 2. Click “New organization” 3. Choose organization name: UCL-[Department]-[Module]-[Year] 4. Set to “Private” initially 5. Add description and contact information\nThe automation handles all repository creation and configuration.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Detailed Process Walkthrough</span>"
    ]
  },
  {
    "objectID": "04-details-for-teachers.html#evaluation-and-improvement",
    "href": "04-details-for-teachers.html#evaluation-and-improvement",
    "title": "4  Detailed Process Walkthrough",
    "section": "4.1 Evaluation and Improvement",
    "text": "4.1 Evaluation and Improvement\n\n4.1.1 Data Collection\nAutomated Metrics:\n# Progress monitoring provides:\n# - Completion rates\n# - Engagement timing\n# - Issue/PR creation patterns\n# - Student interaction levels\nStudent Feedback: - Post-assignment surveys about GitHub experience - Focus groups on peer review value - Comparison with traditional feedback methods\nLearning Outcomes Assessment: - Code quality improvement over semester - Development of collaborative skills - Professional tool proficiency\n\n\n4.1.2 Iterative Improvements\nBased on Student Feedback: - Adjust issue template questions - Modify review assignment algorithms - Update student guidance materials - Refine technical support processes\nBased on Teaching Observations: - Identify common student misconceptions - Adjust scaffold levels for GitHub introduction - Modify assessment weightings - Update marking criteria",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Detailed Process Walkthrough</span>"
    ]
  },
  {
    "objectID": "04-details-for-teachers.html#resource-requirements",
    "href": "04-details-for-teachers.html#resource-requirements",
    "title": "4  Detailed Process Walkthrough",
    "section": "4.2 Resource Requirements",
    "text": "4.2 Resource Requirements\n\n4.2.1 Technical Infrastructure\n\nGitHub Organization: Free for educational use\nAutomation Scripts: Provided, no additional cost\nR/RStudio: Free, open-source software\nComputing Resources: Minimal - runs on standard academic workstations\n\n\n\n4.2.2 Time Investment\nInitial Setup (First Time): - Script configuration: 30 minutes - GitHub organization setup: 15 minutes - Student data preparation: 45 minutes - Total: ~1.5 hours\nPer Assignment (Ongoing): - File organization: 15 minutes - Running automation: 5 minutes - Monitoring and reminders: 10 minutes weekly - Total: ~20 minutes + weekly monitoring\n\n\n4.2.3 Support Requirements\nFor Students: - Provide comprehensive student guide - Offer optional GitHub tutorial sessions - Establish peer mentoring system - Create backup support during lab sessions\nFor Teaching Staff: - Train additional instructors on script usage - Establish backup procedures for technical failures - Document customizations and local adaptations - Plan for software updates and maintenance",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Detailed Process Walkthrough</span>"
    ]
  },
  {
    "objectID": "04-details-for-teachers.html#success-metrics-and-expectations",
    "href": "04-details-for-teachers.html#success-metrics-and-expectations",
    "title": "4  Detailed Process Walkthrough",
    "section": "4.3 Success Metrics and Expectations",
    "text": "4.3 Success Metrics and Expectations\n\n4.3.1 Short-term Indicators\n\n\n90% successful repository setup\n\n\n80% completion of peer reviews within deadline\n\n&lt;5% technical support requests requiring instructor intervention\nPositive student feedback on learning experience\n\n\n\n4.3.2 Long-term Outcomes\n\nImproved code quality in subsequent assignments\nIncreased student confidence with collaborative tools\nEnhanced peer learning culture in the module\nTransferable skills development for industry preparation",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Detailed Process Walkthrough</span>"
    ]
  },
  {
    "objectID": "04-details-for-teachers.html#emergency-procedures-and-backup-plans",
    "href": "04-details-for-teachers.html#emergency-procedures-and-backup-plans",
    "title": "4  Detailed Process Walkthrough",
    "section": "4.4 Emergency Procedures and Backup Plans",
    "text": "4.4 Emergency Procedures and Backup Plans\nGitHub Service Outages: - Monitor GitHub status page - Extend deadlines if necessary - Use manual review process as fallback - Communicate clearly with students\nScript Failures: - Revert to manual repository creation - Use provided troubleshooting guide - Contact technical support resources - Document issues for future improvement\nStudent Technical Difficulties: - Provide alternative access methods - Offer individual technical support - Consider accommodation for accessibility needs - Maintain flexible deadline policies\nRemember: The automation scripts handle the complex technical setup, allowing you to focus on the pedagogical aspects of peer review and student learning outcomes. Start small with one assignment, gather feedback, and iterate based on your experience and student needs.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Detailed Process Walkthrough</span>"
    ]
  },
  {
    "objectID": "05-overview-for-students.html",
    "href": "05-overview-for-students.html",
    "title": "5  How the Peer Review Process Works",
    "section": "",
    "text": "5.0.1 What Happens Behind the Scenes",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>How the Peer Review Process Works</span>"
    ]
  },
  {
    "objectID": "05-overview-for-students.html#after-the-review-receiving-feedback-on-your-code",
    "href": "05-overview-for-students.html#after-the-review-receiving-feedback-on-your-code",
    "title": "5  How the Peer Review Process Works",
    "section": "5.1 After the Review: Receiving Feedback on Your Code",
    "text": "5.1 After the Review: Receiving Feedback on Your Code\n\n5.1.1 Where to Find Your Reviews\n\nGo to your private repository (your teacher will send you the link)\nClick on “Issues” to see the review forms your peers filled out\nClick on “Pull requests” to see any code changes they suggested\n\n\n\n5.1.2 How to Use the Feedback\n\nRead through all the feedback carefully\nAsk questions if something isn’t clear (you can reply to issues and pull requests)\nConsider implementing suggested improvements\nRemember: feedback is meant to help you learn, not to criticize you personally",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>How the Peer Review Process Works</span>"
    ]
  },
  {
    "objectID": "05-overview-for-students.html#tips",
    "href": "05-overview-for-students.html#tips",
    "title": "5  How the Peer Review Process Works",
    "section": "5.2 Tips",
    "text": "5.2 Tips\n\n5.2.1 Common GitHub Terms Explained\n\nRepository (Repo): Your private folder containing your code\nIssue: A place to discuss problems, ask questions, or give feedback\nPull Request: A suggested change to the code\nBranch: Different versions of your code (don’t worry about this too much for now)\nCommit: Saving changes to your code\n\n\n\n5.2.2 Writing Good Reviews\n\nBe kind and constructive: Instead of “This is wrong,” try “Have you considered trying this approach?”\nBe specific: Point out exactly what you’re referring to\nHighlight good things too: If someone did something clever, tell them!\nAsk questions: “Why did you choose this method?” can lead to good discussions\n\n\n\n5.2.3 When You’re Stuck\n\nDon’t panic! GitHub can seem overwhelming at first\nAsk your teacher or classmates for help\nMost buttons are safe to click - you won’t break anything\nRemember that everyone is learning\n\n\n\n5.2.4 Making the Most of Feedback\n\nDon’t take criticism personally - it’s about the code, not you\nTry to understand why reviewers made their suggestions\nFeel free to ask follow-up questions\nUse the feedback to improve your next assignment",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>How the Peer Review Process Works</span>"
    ]
  },
  {
    "objectID": "05-overview-for-students.html#getting-help",
    "href": "05-overview-for-students.html#getting-help",
    "title": "5  How the Peer Review Process Works",
    "section": "5.3 Getting Help",
    "text": "5.3 Getting Help\nIf you get stuck: 1. Ask a classmate 2. Ask your teacher during lab sessions or through the Moodle forum 3. Check the GitHub help documentation 4. Remember: everyone finds GitHub confusing at first!\nRemember: The goal isn’t to become a GitHub expert overnight, but to learn from each other and improve your coding skills together!",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>How the Peer Review Process Works</span>"
    ]
  },
  {
    "objectID": "06-setup-for-students.html",
    "href": "06-setup-for-students.html",
    "title": "6  Getting Started",
    "section": "",
    "text": "6.0.1 Step 1: Create Your GitHub Account\nIf you already have one under some other email account and want to use it for the code review, then please go to the next section. Otherwise:\n\nGo to github.com\nClick “Sign up”\nChoose a username (tip: use something professional as you might use this for job applications later!)\nUse your UCL email address\nCreate a strong password\nVerify your email when GitHub sends you a message\n\n\n\n6.0.2 Step 2: Upload Your Assignment to Moodle\n\nSubmit your code assignment to Moodle as you normally would\nAlso include your GitHub username in your submission or as requested by your teacher",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  }
]